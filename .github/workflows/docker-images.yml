name: Docker images

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'

env:
  DOCKER_REPOSITORY: europeana/portal.js

jobs:
  app:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push to DockerHub
        id: build-push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          pull: true
          cache-from: type=gha
          cache-to: type=gha
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Publish to NPM
        if: startsWith( github.event.ref, 'refs/tags/v' )
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: |
          docker run \
            --rm \
            --env NODE_AUTH_TOKEN=${NODE_AUTH_TOKEN} \
            --mount type=bind,source=$(pwd)/.github/workflows/support/docker-images/.npmrc,target=/root/.npmrc \
            --entrypoint npm ${{ steps.build-push.outputs.digest }} \
            publish --access public
      -
        name: Warm up jsDelivr
        if: startsWith( github.event.ref, 'refs/tags/v' )
        run: |
          # Give jsdelivr time to fetch the new version
          sleep 30
          docker run \
            --rm \
            --mount type=bind,source=$(pwd)/.github/workflows/support/docker-images/warm-up-jsdelivr.sh,target=/root/warm-up-jsdelivr.sh \
            --entrypoint /root/warm-up-jsdelivr.sh ${{ steps.build-push.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: [app]
    if: github.event.ref == 'refs/heads/master'
    env:
      IBMCLOUD_API_URL: https://cloud.ibm.com
      IBMCLOUD_API_KEY: ${{ secrets.IBMCLOUD_API_KEY }}
      IBMCLOUD_CLUSTER_NAME: europeana-web
      IBMCLOUD_REGION: eu-de
    steps:
      # NOTE: Kept for potential future use if auto-deploying version tags to production
      # -
      #   name: Set Docker image tag env
      #   run: echo "DOCKER_IMAGE_TAG=${DOCKER_REPOSITORY}:$(echo ${{ github.event.ref }} | sed -r 's#^refs/(heads/|tags/v)##')" >> $GITHUB_ENV
      -
        name: Install ibmcloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud plugin install container-service
      -
        name: Login to IBM Cloud
        run: |
          ibmcloud login -a ${IBMCLOUD_API_URL} -r ${IBMCLOUD_REGION} --apikey ${IBMCLOUD_API_KEY}
          ibmcloud ks cluster config --cluster ${IBMCLOUD_CLUSTER_NAME}
      -
        name: Update deployment
        run: |
          kubectl rollout restart --namespace test deployment/portal-js

  nginx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: europeana/portal.js-nginx
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./tests/e2e/docker/nginx
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  nightwatch:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: europeana/portal.js-nightwatch
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./tests/e2e/docker/nightwatch-base
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
